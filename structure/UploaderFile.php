<?php

namespace steroids\file\structure;

use steroids\core\behaviors\UidBehavior;
use yii\base\BaseObject;
use yii\helpers\StringHelper;

/**
 * Class UploaderFile
 * @property string $uid
 * @property-read string $title
 * @property-read string $savedFileName
 */
class UploaderFile extends BaseObject
{
    /**
     * File uid (generated by backend or frontend)
     * @var string|null
     */
    private ?string $_uid = null;

    /**
     * File name with extension
     * @var string
     */
    public string $name = '';

    /**
     * @var int
     */
    public $size;

    /**
     * File mime type
     * @var string
     */
    public ?string $mimeType = null;

    /**
     * @var UploaderContentRange
     */
    public ?UploaderContentRange $contentRange = null;

    /**
     * Absolute path to file (if exists locally) or stream
     * @var string|resource
     */
    public $source;

    /**
     * @var mixed
     */
    public $rawData;

    public function getUid()
    {
        if (!$this->_uid) {
            $this->_uid = UidBehavior::generate();
        }
        return $this->_uid;
    }

    public function setUid($value)
    {
        $this->_uid = $value;
    }

    /**
     * @return string|null
     */
    public function getTitle()
    {
        return $this->name ?: (is_string($this->source) ? StringHelper::basename($this->source) : $this->uid);
    }

    public function getSavedFileName()
    {
        $ext = pathinfo($this->getTitle(), PATHINFO_EXTENSION);

        if (!empty($ext)) {
            $ext = '.' . $ext;
        } else {
            $ext = $this->getExtentionBySource($this->source);
        }

        return $this->uid . $ext;
    }

    /**
     * @param string $source
     * @return false|string
     */
    private function getExtentionBySource($source)
    {
        $imageType = exif_imagetype($source);
        if (!$imageType) {
            throw new FileUserException(\Yii::t('steroids', 'Не удалось установить тип файла'));
        }

        return image_type_to_extension($imageType);
    }
}
